openapi: 3.0.0
info:
  title: LiblibAI API
  description: LiblibAI x 星流 图像大模型API
  version: 1.0.0
servers:
  - url: https://openapi.liblibai.cloud
    description: LiblibAI Open Platform
security:
  - ApiKeyAuth: [ ]
components:
  responses:
    submitResponse:
        description: 成功
        content:
          application/json:
            schema:
              title: SubmitResponse
              type: object
              properties:
                code:
                  type: integer
                data:
                  type: object
                  properties:
                    generateUuid:
                      type: string
                      description: 生图任务uuid，使用该uuid查询生图进度
                      example: 123e4567-e89b-12d3-a456-426614174000
                msg:
                  type: string
              required:
#                - data
                - code
  schemas:
    additionalNetwork:
      type: object
      title: AdditionalNetwork
      properties:
        modelId:
          type: string
          description: LoRA的模型版本uuid
          example: 31360f2f031b4ff6b589412a52713fcf
        weight:
          type: number
          format: float
          description: LoRA权重
          example: 0.3
    controlNet:
      type: object
      title: ControlNet
      properties:
        unitOrder:
          type: integer
          description: 执行顺序
          example: 1
          default: 1
        sourceImage:
          type: string
          description: 参考图地址
          example: "https://liblibai-online.liblib.cloud/img/081e9f07d9bd4c2ba090efde163518f9/7c1cc38e-522c-43fe-aca9-07d5420d743e.png"
        width:
          type: integer
          description: 参考图宽度
          example: 1024
          default: 1024
        height:
          type: integer
          description: 参考图高度
          example: 1536
          default: 1024
        preprocessor:
          type: integer
          description: 预处理器枚举值
          example: 3
        annotationParameters:
          type: object
          additionalProperties: {}
        model:
          type: string
          description: controlnet的模型
          example: 6349e9dae8814084bd9c1585d335c24c
        controlWeight:
          type: number
          format: float
          description: 控制权重
          example: 1
        startingControlStep:
          type: integer
          description: 开始控制步数
          example: 0
        endingControlStep:
          type: integer
          description: 结束控制步数
          example: 1
        pixelPerfect:
          type: integer
          description: 完美像素
          example: 1
        controlMode:
          type: integer
          description: 控制模式，0均衡，1更注重提示词，2更注重controlnet
          example: 0
        resizeMode:
          type: integer
          description: 缩放模式，0拉伸，1裁剪，2填充
          example: 1
        maskImage:
          type: string
          description: 蒙版图
          example: ""
    generateStatus:
      type: integer
      enum: [ 1,2,3,4,5,6 ]
      x-enum-varnames:
        - PENDING
        - RUNNING
        - GENERATED
        - APPROVING
        - SUCCEED
        - FAILED
    auditStatus:
      type: integer
      enum: [ 1,2,3,4,5 ]
      x-enum-varnames:
        - PENDING
        - APPROVING
        - APPROVED
        - REJECTED
        - FAILED
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: query
      name: AccessKey
      description: API access key
paths:
  /api/generate/webui/text2img/ultra:
    post:
      summary: 星流Star-3 Alpha图生图
      description: 根据提供的文本提示词和参数生成图片
      operationId: submitTextToImageUltra
      requestBody:
        description: 生图请求参数
        content:
          application/json:
            schema:
              type: object
              title: TextToImageUltraRequest
              properties:
                templateUuid:
                  type: string
                  description: 模板UUID
                  example: 5d7e67009b344550bc1aa6ccbfa1d7f4
                  default: 5d7e67009b344550bc1aa6ccbfa1d7f4
                generateParams:
                  type: object
                  properties:
                    prompt:
                      type: string
                      description: 正向提示词，文本
                      example: 1 girl,lotus leaf,masterpiece,best quality,finely detail,highres,8k,beautiful and aesthetic,no watermark
                    aspectRatio:
                      type: string
                      description: 图片宽高比预设，与imageSize二选一配置即可
                      enum:
                        - square
                        - portrait
                        - landscape
                      example: portrait
                    imageSize:
                      type: object
                      description: 图片具体宽高，与aspectRatio二选一配置即可
                      properties:
                        width:
                          type: integer
                          description: 图片宽度
                          minimum: 512
                          maximum: 2048
                          example: 768
                        height:
                          type: integer
                          description: 图片高度
                          minimum: 512
                          maximum: 2048
                          example: 1024
                    imgCount:
                      type: integer
                      description: 单次生图张数
                      minimum: 1
                      maximum: 4
                      example: 1
                    steps:
                      type: integer
                      description: 采样步数
                      example: 20
                    controlnet:
                      type: object
                      title: UltraControlNet
                      description: 构图控制
                      properties:
                        controlType:
                          type: string
                          description: 控制类型
                          enum:
                            - line
                            - depth
                            - pose
                            - IPAdapter
                          example: pose
                        controlImage:
                          type: string
                          description: 参考图可公网访问的完整URL
                          format: uri
                          example: https://liblibai-online.liblib.cloud/img/081e9f07d9bd4c2ba090efde163518f9/7c1cc38e-522c-43fe-aca9-07d420d743e.png
                  required:
                    - prompt
                    - imgCount
              required:
                - templateUuid
                - generateParams
      responses:
        '200':
          $ref: '#/components/responses/submitResponse'
        '400':
          description: 请求参数错误
        '500':
          description: 服务器内部错误
  /api/generate/webui/status:
    post:
      summary: 查询生图任务状态
      description: 根据生图任务uuid查询生图任务的状态和相关信息
      operationId: getStatus
      requestBody:
        description: 查询请求参数
        content:
          application/json:
            schema:
              type: object
              title: StatusRequest
              description: 生图任务uuid，发起生图任务时返回该字段
              properties:
                generateUuid:
                  type: string
              required:
                - generateUuid
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                title: StatusResponse
                properties:
                  code:
                    type: integer
                    example: 0
                  msg:
                    type: string
                    example: ""
                  data:
                    type: object
                    properties:
                      generateUuid:
                        type: string
                        description: 生图任务uuid，使用该uuid查询生图进度
                        example: 8dcbfa2997444899b71357ccb7db378b
                      generateStatus:
                        $ref: "#/components/schemas/generateStatus"
                      #                        type: integer
                      #                        description: 生图状态见下方3.3.1节
                      #                        example: 1
                      percentCompleted:
                        type: number
                        format: float
                        description: 生图进度，0到1之间的浮点数，（暂未实现）
                        example: 0
                      generateMsg:
                        type: string
                        description: 生图信息，提供附加信息，如生图失败信息
                        example: ""
                      pointsCost:
                        type: integer
                        description: 本次生图任务消耗积分数
                        example: 10
                      accountBalance:
                        type: integer
                        description: 账户剩余积分数
                        example: 1356402
                      images:
                        type: array
                        items:
                          title: Image
                          type: object
                          properties:
                            imageUrl:
                              type: string
                              description: 图片地址，可直接访问，地址有时效性：7天
                              example: "https://liblibai-online.liblib.cloud/sd-images/08efe30c1cacc4bb08df8585368db1f9c082b6904dd8150e6e0de5bc526419ee.png"
                            seed:
                              type: integer
                              description: 随机种子值
                              example: 12345
                            auditStatus:
                              $ref: "#/components/schemas/auditStatus"
        '400':
          description: 请求参数错误
        '500':
          description: 服务器内部错误
  /api/model/version/get:
    post:
      summary: 查询模型版本参数
      description: |
        查询指定的模型版本参数。目前Lib已开放全站的可商用模型供API使用，您可以在Lib站内检索可商用的Checkpoint和LoRA模型。
        选择喜欢的模型版本，从浏览器网址中复制versionUuid，粘贴到文生图或图生图的参数模板中使用。
        若您忘记了在生图参数中应用的模型是哪一款，您可以调用本接口进行查询。
      operationId: getModelVersion
      requestBody:
        description: 查询请求参数
        content:
          application/json:
            schema:
              type: object
              properties:
                versionUuid:
                  type: string
                  description: 要查询的模型版本uuid
                  example: 21df5d84cca74f7a885ba672b5a80d19
              required:
                - versionUuid
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                title: VersionResponse
                properties:
                  version_uuid:
                    type: string
                    description: LiblibAI官网模型链接后缀
                    example: 21df5d84cca74f7a885ba672b5a80d19
                  model_name:
                    type: string
                    description: 模型名称
                    example: AWPortrait XL
                  version_name:
                    type: string
                    description: 版本名称
                    example: 1.1
                  baseAlgo:
                    type: string
                    description: 基础算法
                    example: 基础算法 XL
                  show_type:
                    type: string
                    description: 公开可用的模型标识
                    example: "1"
                  commercial_use:
                    type: string
                    description: 可商用标识，可商用为1，不可商用为0
                    example: "1"
                  model_url:
                    type: string
                    description: 模型链接
                    example: "https://www.liblib.art/modelinfo/f8b990b20cb943e3aa0e96f34099d794?versionUuid=21df5d84cca74f7a885ba672b5a80d19"
        '404':
          description: 未找到模型
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: 错误提示信息
                    example: "未找到与{version_uuid}对应的模型，请检查version_uuid是否正确，或所选模型是否为Checkpoint或LoRA"
        '400':
          description: 请求参数错误
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: 错误提示信息
                    example: "{version_uuid}不在API目前支持的baseAlgo范围内"
  /api/generate/webui/text2img:
    post:
      summary: 提交文生图任务
      description: 提交文生图任务，生成图片
      operationId: submitTextToImage
      requestBody:
        description: 文生图任务请求参数
        content:
          application/json:
            schema:
              title: TextToImageRequest
              type: object
              properties:
                templateUuid:
                  type: string
                  description: 参数模板uuid
                  example: e10adc3949ba59abbe56e057f20f883e
                  default: e10adc3949ba59abbe56e057f20f883e
                generateParams:
                  type: object
                  properties:
                    checkPointId:
                      type: string
                      description: 底模 modelVersionUUID
                      example: 0ea388c7eb854be3ba3c6f65aac6bfd3
                    prompt:
                      type: string
                      description: 正向提示词，文本
                      example: Asian portrait,A young woman wearing a green baseball cap,covering one eye with her hand
                    negativePrompt:
                      type: string
                      description: 负向提示词，文本
                      example: ng_deepnegative_v1_75t,(badhandv4:1.2),EasyNegative,(worst quality:2),
                    sampler:
                      type: integer
                      description: 采样方法
                      example: 15
                    steps:
                      type: integer
                      description: 采样步数
                      example: 20
                    cfgScale:
                      type: integer
                      description: 提示词引导系数
                      example: 7
                    width:
                      type: integer
                      description: 图片宽度
                      example: 768
                    height:
                      type: integer
                      description: 图片高度
                      example: 1024
                    imgCount:
                      type: integer
                      description: 图片数量
                      example: 1
                    randnSource:
                      type: integer
                      description: 随机种子生成器 0 cpu，1 Gpu
                      example: 0
                    seed:
                      type: integer
                      description: 随机种子值，-1表示随机
                      example: 2228967414
                    restoreFaces:
                      type: integer
                      description: 面部修复，0关闭，1开启
                      example: 0
                    additionalNetwork:
                      type: array
                      items:
                        $ref: '#/components/schemas/additionalNetwork'
                    hiResFixInfo:
                      type: object
                      properties:
                        hiresSteps:
                          type: integer
                          description: 高分辨率修复的重绘步数
                          example: 20
                        hiresDenoisingStrength:
                          type: number
                          format: float
                          description: 高分辨率修复的重绘幅度
                          example: 0.75
                        upscaler:
                          type: integer
                          description: 放大算法模型枚举
                          example: 10
                        resizedWidth:
                          type: integer
                          description: 放大后的宽度
                          example: 1024
                        resizedHeight:
                          type: integer
                          description: 放大后的高度
                          example: 1536
                    inpaintParam:
                      type: object
                      properties:
                        maskImage:
                          type: string
                          description: 蒙版地址
                          example: "https://liblibai-online.liblib.cloud/img/081e9f07d9bd4c2ba090efde163518f9/323fc358-618b-4c7d-b431-7d890209e5a5.png"
                        maskBlur:
                          type: integer
                          description: 蒙版模糊度
                          example: 4
                        maskPadding:
                          type: integer
                          description: 蒙版边缘预留像素，也称蒙版扩展量
                          example: 32
                        maskMode:
                          type: integer
                          description: 蒙版模式
                          example: 0
                        inpaintArea:
                          type: integer
                          description: 重绘区域, 0重绘全图，1仅重绘蒙版区域
                          example: 0
                        inpaintingFill:
                          type: integer
                          description: 蒙版内容的填充模式
                          example: 1
                    controlNet:
                      type: array
                      items:
                        $ref: "#/components/schemas/controlNet"
              required:
                - generateParams
      responses:
        '200':
          $ref: '#/components/responses/submitResponse'
        '400':
          description: 请求参数错误
        '500':
          description: 服务器内部错误
  /api/generate/webui/img2img:
    post:
      summary: 提交图生图任务
      description: 提交图生图任务，生成图片
      operationId: submitImageToImage
      requestBody:
        description: 图生图任务请求参数
        content:
          application/json:
            schema:
              title: ImageToImageRequest
              type: object
              properties:
                templateUuid:
                  type: string
                  description: 参数模板uuid
                  example: 9c7d531dc75f476aa833b3d452b8f7ad
                  default: 9c7d531dc75f476aa833b3d452b8f7ad
                generateParams:
                  type: object
                  properties:
                    checkPointId:
                      type: string
                      description: 底模 modelVersionUUID
                      example: 0ea388c7eb854be3ba3c6f65aac6bfd3
                    prompt:
                      type: string
                      description: 正向提示词
                      example: 1 girl wear sunglasses
                    negativePrompt:
                      type: string
                      description: 负向提示词
                    clipSkip:
                      type: integer
                      description: Clip跳过层
                      example: 2
                    sampler:
                      type: integer
                      description: 采样方法
                      example: 15
                    steps:
                      type: integer
                      description: 采样步数
                      example: 20
                    cfgScale:
                      type: integer
                      description: 提示词引导系数
                      example: 7
                    randnSource:
                      type: integer
                      description: 随机种子来源，0表示CPU，1表示GPU
                      example: 0
                    seed:
                      type: integer
                      description: 随机种子值，-1表示随机
                      example: -1
                    imgCount:
                      type: integer
                      description: 图片数量，1到4
                      example: 1
                    restoreFaces:
                      type: integer
                      description: 面部修复，0关闭，1开启
                      example: 0
                    sourceImage:
                      type: string
                      description: 源图像地址
                      example: "https://liblibai-online.liblib.cloud/img/081e9f07d9bd4c2ba090efde163518f9/7c1cc38e-522c-43fe-aca9-07d5420d743e.png"
                    resizeMode:
                      type: integer
                      description: 缩放模式，0拉伸，1裁剪，2填充
                      example: 0
                    resizedWidth:
                      type: integer
                      description: 图像缩放后的宽度
                      example: 1024
                    resizedHeight:
                      type: integer
                      description: 图像缩放后的高度
                      example: 1536
                    mode:
                      type: integer
                      description: 0图生图，4局部重绘
                      example: 4
                    denoisingStrength:
                      type: number
                      format: float
                      description: 重绘幅度
                      example: 0.75
                    additionalNetwork:
                      type: array
                      items:
                        $ref: '#/components/schemas/additionalNetwork'
                    controlNet:
                      type: array
                      items:
                        $ref: "#/components/schemas/controlNet"
              required:
                - generateParams
      responses:
        '200':
          $ref: '#/components/responses/submitResponse'
        '400':
          description: 请求参数错误
        '500':
          description: 服务器内部错误
  /api/generate/comfyui/app:
    post:
      summary: 提交 ComfyUI 工作流生图任务
      description: |
        提交 ComfyUI 工作流生图任务。目前Lib已开放全站的可商用、可在线运行工作流供API使用，您可以在Lib站内工作流合集检索。
        在工作流的详情页会出现【本工作流已提供API服务】，且可查看API相关参数。（详情页未出现API参数的工作流，暂不支持API调用）
      operationId: submitComfyTask
      requestBody:
        description: ComfyUI 工作流生图任务请求参数
        content:
          application/json:
            schema:
              title: ComfyRequest
              type: object
              properties:
                templateUuid:
                  type: string
                  description: 默认模版uuid
                  example: 4df2efa0f18d46dc9758803e478eb51c
                  default: 4df2efa0f18d46dc9758803e478eb51c
                generateParams:
                  type: object
                  description: 生图参数，json结构
                  additionalProperties:
                    title: ComfyNodeParams
                    type: object
                    properties:
                      inputs:
                        type: object
                        additionalProperties: true
                      class_type:
                        type: string
                  example:
                    "12":
                      class_type: LoadImage
                      inputs:
                        image: "https://liblibai-tmp-image.liblib.cloud/img/baf2e419ce1cb06812314957efd2e067/af0c523d3d2b4092ab45c64c72e4deb76babb12e9b8a178eb524143c3b71bf85.png"
                    "112":
                      class_type: ImageScale
                      inputs:
                        width: 768
                    "136":
                      class_type: RepeatLatentBatch
                      inputs:
                        amount: 4
                    "137":
                      class_type: LatentUpscaleBy
                      inputs:
                        scale_by: 1.5
                    workflowUuid: 2f22ab7ce4c044afb6d5eee2e61547f3
              required:
                - generateParams
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                title: SubmitComfyResponse
                type: object
                properties:
                  code:
                    type: integer
                    example: 100000
                  msg:
                    type: string
                    example: "Request method 'GET' is not supported"
                  data:
                    type: object
                    properties:
                      generateUuid:
                        type: string
                        description: 生图任务uuid，使用该uuid查询生图进度
                        example: "8dcbfa2997444899b71357ccb7db378b"
        '400':
          description: 请求参数错误
        '500':
          description: 服务器内部错误
  /api/generate/comfy/status:
    post:
      summary: 查询 comfy 生图结果
      description: 根据生图任务uuid查询生图任务的状态和结果
      operationId: getComfyStatus
      requestBody:
        description: 查询请求参数
        content:
          application/json:
            schema:
              title: ComfyStatusRequest
              type: object
              properties:
                generateUuid:
                  type: string
                  description: 生图任务uuid，发起生图任务时返回该字段
                  example: a996794faff8424a8ff56acb421e7305
              required:
                - generateUuid

      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                title: ComfyStatusResponse
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  msg:
                    type: string
                    example: ""
                  data:
                    type: object
                    properties:
                      accountBalance:
                        type: integer
                        description: 账户剩余积分数
                        example: 91111
                      generateStatus:
                        $ref: "#/components/schemas/generateStatus"
                      generateUuid:
                        type: string
                        description: 生图任务uuid，使用该uuid查询生图进度
                        example: a996794faff8424a8ff56acb421e7305
                      percentCompleted:
                        type: number
                        format: float
                        description: 生图进度，0到1之间的浮点数
                        example: 1
                      pointsCost:
                        type: integer
                        description: 本次生图任务消耗积分数
                        example: 10
                      images:
                        type: array
                        items:
                          title: NodeImage
                          type: object
                          properties:
                            auditStatus:
                              $ref: "#/components/schemas/auditStatus"
                            imageUrl:
                              type: string
                              description: 图片地址，可直接访问，地址有时效性：7天
                              example: "https://liblibai-tmp-image.liblib.cloud/img/360643a3d8414af8b99664b208bc9302/35801ecbf6e6ea8ad89c2606b68d30dfc9579713f5d917694d1616c57afe82fb.png"
                            nodeId:
                              type: string
                              description: 输出图片的节点ID
                              example: "91"
                            outputName:
                              type: string
                              description: 输出图片的节点名称
                              example: "SaveImage"
                      videos:
                        type: array
                        items:
                          type: object
                          properties:
                            videoUrl:
                              type: string
                              description: 视频地址，可直接访问，地址有时效性：7天
                            coverPath:
                              type: string
                              description: 视频封面地址
                            nodeId:
                              type: string
                              description: 输出视频的节点ID
                            outputName:
                              type: string
                              description: 输出视频的节点名称
                            auditStatus:
                              $ref: "#/components/schemas/auditStatus"
        '400':
          description: 请求参数错误
        '500':
          description: 服务器内部错误